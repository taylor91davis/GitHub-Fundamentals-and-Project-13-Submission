### Step 1: Create, Extract, Compress, and Manage tar Backup Archives
1. Command to **extract** the `TarDocs.tar` archive to the current directory: 

sudo tar -xvf TarDocs.tar -C~/projects/
2. Command to **create** the `Javaless_Doc.tar` archive from the `TarDocs/` directory, while excluding the `TarDocs/Documents/Java` directory:

 sudo tar -cvf Javaless_Doc.tar --exclude=TarDocs/Documents/Java~Projects
3. Command to ensure `Java/` is not in the new `Javaless_Docs.tar` archive:

Tar -tvf Javaless_Doc.tar | Grep ‘Documents/Java’
**Bonus** 
- Command to create an incremental archive called `logs_backup_tar.gz` with only changed files to `snapshot.file` for the `/var/log` directory:

Sudo tar --listed -incremental=snapshot.file -cvzf logs_backup.tar.gz/var/log 
#### Critical Analysis Question
- Why wouldn't you use the options `-x` and `-c` at the same time with `tar`?

-x extracts an archive and -c creates archives, they would cancel each other out 
--- 
### Step 2: Create, Manage, and Automate Cron Jobs
1. Cron job for backing up the `/var/log/auth.log` file:

Cronjob -e 
0 5 * * 3 tar -zcvf auth_backups.tgz /var/log/auth.log
---
### Step 3: Write Basic Bash Scripts
1. Brace expansion command to create the four subdirectories:

sudo mkdir -p ~/backups/{‘pinklog yellowlog mauvelog greenlog’}
2. Paste your `system.sh` script edits below:
    ```bash
    #!/bin/bash
    [Your solution script contents here]

 #!/bin/bash

free -h > ~/backups/pinklog/pink_log.txt

du -h > ~/backups/yellowlog/yellow_log.txt

lsof > ~/backups/mauvelog/mauve_log.txt

df -h > ~/backups/greenlog/green_log.txt
    ```
3. Command to make the `system.sh` script executable:

 chmod +x system.sh

**Optional**
- Commands to test the script and confirm its execution:
**Bonus**
- Command to copy `system` to system-wide cron directory:
---
### Step 4. Manage Log File Sizes
 
1. Run `sudo nano /etc/logrotate.conf` to edit the `logrotate` configuration file. 
    Configure a log rotation scheme that backs up authentication messages to the `/var/log/auth.log`.
    - Add your config file edits below:
    ```bash
    [Your logrotate scheme edits here]
    ```
---

#!/bin/bash
Rotating pattern
daily
/var/log/syslog
Su root syslog
Keeps 5 days of backloggings
Rotate 5
empty log files are rotated, old logs are removed
create

### Bonus: Check for Policy and File Violations
1. Command to verify `auditd` is active:
2. Command to set number of retained logs and maximum log file size:
    - Add the edits made to the configuration file below:
    ```bash
    [Your solution edits here]
    ```
3. Command using `auditd` to set rules for `/etc/shadow`, `/etc/passwd` and `/var/log/auth.log`:
    - Add the edits made to the `rules` file below:
    ```bash
    [Your solution edits here]
    ```
4. Command to restart `auditd`:
5. Command to list all `auditd` rules:
6. Command to produce an audit report:
7. Create a user with `sudo useradd attacker` and produce an audit report that lists account modifications:
8. Command to use `auditd` to watch `/var/log/cron`:
9. Command to verify `auditd` rules:
